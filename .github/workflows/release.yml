name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      toolchain:
        description: "Rust toolchain version"
        required: false
        default: stable

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup MSVC environment (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ github.event.inputs.toolchain || 'stable' }}
          components: clippy, rustfmt

      - name: Cache cargo build
        uses: Swatinem/rust-cache@v2

      - name: Build release (deny warnings)
        run: cargo build --release
        env:
          RUSTFLAGS: -D warnings

      - name: Package artifact (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item target/release/mdmdview.exe dist/mdmdview.exe
          Compress-Archive -Path dist/mdmdview.exe -DestinationPath "mdmdview-${{ github.ref_name }}-windows-x86_64.zip"

      - name: Package artifact (Linux)
        if: runner.os == 'Linux'
        run: |
          mkdir -p dist
          cp target/release/mdmdview dist/mdmdview
          tar -C dist -czf "mdmdview-${{ github.ref_name }}-linux-x86_64.tar.gz" mdmdview

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mdmdview-${{ runner.os }}
          path: |
            mdmdview-${{ github.ref_name }}-windows-x86_64.zip
            mdmdview-${{ github.ref_name }}-linux-x86_64.tar.gz
          if-no-files-found: ignore

  release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          generate_release_notes: true
          files: |
            artifacts/*.zip
            artifacts/*.tar.gz
