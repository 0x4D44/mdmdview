name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      toolchain:
        description: "Rust toolchain version"
        required: false
        default: stable

jobs:
  build-test-release:
    name: Build, Lint, Test, Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup MSVC environment (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ github.event.inputs.toolchain || 'stable' }}
          components: clippy, rustfmt

      - name: Cache cargo build
        uses: Swatinem/rust-cache@v2

      - name: Format (rustfmt)
        run: cargo fmt --all -- --check

      - name: Lint (clippy, deny warnings)
        run: cargo clippy --all-targets -- -D warnings

      - name: Build (deny warnings)
        run: cargo build --all-targets
        env:
          RUSTFLAGS: -D warnings

      - name: Test (deny warnings)
        run: cargo test --all-targets -- --nocapture
        env:
          RUSTFLAGS: -D warnings

      - name: Build release (after checks pass)
        run: cargo build --release
